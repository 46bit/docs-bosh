---
title: Deploying MicroBOSH
---

MicroBOSH runs within a single VM on any cloud infrastructure that is supported for deploying software with BOSH.

Use MicroBOSH to deploy one of the following on an IaaS:

* Multi-VM BOSH for production
* Cloud Foundry or another distributed software package

The only supported way to deploy BOSH for production is to use MicroBOSH.

The IaaS you use determines many details of how you deploy MicroBOSH.
This topic starts with a general procedure that applies for any IaaS,
and ends with an example focused on AWS.

## <a id="prep"></a> Preparing to Deploy  ##

To deploy MicroBOSH you need a stemcell, a manifest, and properly set up environments both locally and in the cloud.
You do not need a release since MicroBOSH itself is included within the stemcell.

### <a id="local"></a> Set up a local work area  ###

Set up a directory structure with two levels:

1. A top-level directory named after the environment you intend to deploy on the IaaS.
1. Inside the environment directory, a directory for each product you intend to deploy.
In this context, MicroBOSH is a product.

* The examples that follow assume that you plan to deploy MicroBOSH to an environment named `boshtest`.
You create a directory for each, such that the path to your MicroBOSH deployment is `boshtest/microbosh`.

<%= image_tag("bosh-directories-2-level.png") %>

### <a id="cli"></a> Install the BOSH CLI  ###

* Run this command to install the BOSH CLI along with its MicroBOSH plugin:

    `gem install bosh_cli bosh_cli_plugin_micro`

* As needed, consult the BOSH CLI help:

    `bosh help --all`

**Note**: The latest patch of Ruby 1.9.3 is a prerequisite for installing the BOSH CLI.
(Ruby 2.x is not supported.) If you are using the rbenv Ruby environment manager,
refresh the list of gems that rbenv knows about:

<pre class="terminal">
$ rbenv rehash
</pre>

### <a id="cloud"></a> Set up a deployment area in the cloud ###

Collect or decide:

1. The name of the environment you plan to deploy.
1. Any IaaS-specific information about where your deployment should reside.
1. The name and credentials of the user whom you want to designate as admin for your deployment.

### <a id="stemcell"></a> Obtain a stemcell  ###

[Download](http://bosh-artifacts.cfapps.io/) a stemcell that is appropriate for your preferred combination of IaaS and VM type.
Download to the directory of your choice, and remember its path for later use.

### <a id="manifest"></a> Create the MicroBOSH deployment manifest  ###

The MicroBOSH deployment manifest is a YAML file named `micro-bosh.yml` that should reside in the directory
created for MicroBOSH (`boshtest/microbosh` in these examples).

To understand general principles of BOSH deployment manifests,
see [BOSH Deployment Manifest](./create-manifest.html).

## <a id="deploy"></a> Deploying MicroBOSH  ##

When you are ready to deploy, be sure you know the local path to the stemcell you downloaded.
Then `cd` into the directory you created for MicroBOSH (`boshtest/microbosh` in these examples).

1. Set the deploymentâ€”that is, direct the BOSH CLI to use the correct manifest:

    `bosh micro deployment micro_bosh.yml`

1. Deploy MicroBOSH:

    `bosh micro deploy <local_path_to_stemcell>`

**Note**: An important effect of the `bosh micro deploy` command is to create the `bosh-deployment.yml` file,
which functions like a small database that MicroBOSH uses when bootstrapping itself.

## <a id="verify"></a> Verifying your Deployment  ##

You have two main options for verifying that your deployment was successful.
These are to run some basic commands, and, to run the
BOSH Acceptance Tests (BATS).

### <a id="start"></a> Basic commands for verifying MicroBOSH ###

Target the MicroBOSH with the host and domain name or IP address.
The `bosh target` command prompts you for a username and password.

For example:

<pre class="terminal">
$ bosh target alpha.microbosh-test.example.com
Target set to `vpc-alpha-microbosh-test'
Your username: admin
Enter password: *****
Logged in as `admin'
</pre>

**Note**: The first time you log in,
the username and password are both `admin`.

**Extremely Important**: _Change the default password to a strong password immediately._

Run `bosh vms`.

Try uploading software to your MicroBOSH.
A minimal ["dummy release"](https://github.com/pivotal-cf-experimental/dummy-boshrelease) can be useful here.

### <a id="bats"></a> Run the BOSH Acceptance Tests (BATS) ###

BATS requires advanced system administration skills.
