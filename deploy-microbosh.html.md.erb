---
title: Deploying MicroBOSH
---

The only supported way to deploy BOSH for production is to use MicroBOSH.

MicroBOSH runs within a single VM on any cloud infrastructure that is supported for deploying software with BOSH.
MicroBOSH is suited to deploying BOSH releases of any software, including multi-VM BOSH.

To deploy MicroBOSH you need a stemcell and a manifest.
You do not need a release since MicroBOSH itself is included within the stemcell.

The IaaS you use determines the details of how you deploy MicroBOSH.
This topic starts with a general procedure that applies for all IaaS's,
and ends with an example which provides the specifics of deploying on AWS.

## <a id="prep"></a> Preparing to Deploy  ##

Your overall goal when preparing to deploy MicroBOSH is to have a stemcell, a manifest,
and properly set up environments both locally and in the cloud.

### <a id="cli"></a> Install the BOSH CLI  ###

* Run this command to install the BOSH CLI along with its MicroBOSH plugin:

    `gem install bosh_cli bosh_cli_plugin_micro`

### <a id="cloud"></a> Set up a deployment area in the cloud ###

Collect or decide:

1. The deployment name.
1. Any IaaS-specific information about where your deployment should reside.
1. The name and credentials of an admin user for your deployment.

### <a id="local"></a> Set up a local work area  ###

**Note**: While not required, the instructions in this section are highly recommended.

Set up a directory structure with four levels:

1. A top-level directory to contain files related to deployments to a particular IaaS.
1. Inside the top-level directory, a directory to contain files related to a particular deployment.
1. Inside each deployment directory, a directory to contain mainly manifests.
1. Inside the manifests directory, directories for each product you intend to deploy.

### <a id="stemcell"></a> Obtain a stemcell  ###

[Download](http://bosh-artifacts.cfapps.io/) a stemcell that is appropriate for your preferred combination of IaaS and VM type.
Download to the directory of your choice, and remember its path for later use.

### <a id="enviro"></a> Set up your local environment   ###

In the directory that contains files for your MicroBOSH deployment (`deployments-aws/boshtest` in these examples),
create a text file named `bosh_environment`.

* For each item of information enumerated [above](#cloud),
add a line to the file, of the form:

    `export <BOSH_environment_variable>=<value>`

Use the information you have [collected](#cloud) to identify values to assign.

* For example, the file could look something like this:

<pre class="terminal">
export BOSH_DEPLOYMENT_NAME=boshtest
export BOSH_VPC_DOMAIN=example.com
export BOSH_VPC_SUBDOMAIN=myboshtest
export BOSH_VPC_PRIMARY_AZ=us-east-1b
export BOSH_VPC_ACCESS_KEY_ID=12345abcde12345abcde12345
export BOSH_VPC_SECRET_ACCESS_KEY=12345abcde22345abcde32345abcde42345abcde
</pre>

* Now use the file to generate the BOSH environment variables:

    `source bosh_environment`

* Check to see that the BOSH environment variables exist:

    `env | grep BOSH`

### <a id="manifest"></a> Create the manifest  ###

If you are using an IaaS other than AWS, you need to use a text editor to create a deployment manifest, which is a YAML file named `micro-bosh.yml`.
Refer to [Creating a BOSH Deployment Manifest](./create-manifest.html) for instructions.

For AWS, there are BOSH CLI commands which generate the manifest for you.

## <a id="deploy"></a> Deploying MicroBOSH  ##

Once preparation is complete, you deploy MicroBOSH in three steps.

### <a id="set"></a> Set the deployment  ###

Before you deploy, you must set the BOSH CLI to use the correct manifest.
This is called "setting the deployment."

1. `cd` into the directory you created for manifests (`manifests` in these examples).
1. Set the deployment:

    `bosh micro deployment micro/micro_bosh.yml`

### <a id="deploy"></a> Deploy MicroBOSH  ###

1. cd into the _which?_ directory.
1. Deploy MicroBOSH:

    `bosh micro deploy <stemcell_URL>`

## <a id="verify"></a> Verifying your Deployment  ##

You have two general options for verifying that your deployment was successful.
These are:

1. Start using MicroBOSH by targeting the new director and uploading software.
A minimal "dummy release" can be useful here.

2. Running the BOSH Acceptance Tests (BATS), which requires advanced system administration skills.



