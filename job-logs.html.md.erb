---
title: Using BOSH Job and Errand Logs
---

This topic describes different types of logs for BOSH jobs and errands and how
you access and view them.
For general information on logging, refer to the [Cloud Foundry Logging](../running/managing-cf/logging.html) topic.

##<a id="jobs-logging"></a>Job Logging ##

You can access logs by two methods:

 * Using the `bosh ssh` command to access the log location.
 * Using the log-specific BOSH command to generate a config file to standard
output.

The following sections describe the logs that contain job information.

###<a id="agent-logs"></a>BOSH Agent Logs ###

Agent logs contain configuration and runtime information from an Agent running
on a specific VM. Review these logs if a VM fails.
The Agent stores logs in `/var/vcap/bosh/log`.

To review an Agent log:

1. Run `bosh vms` to display a table that provides an overview of VMs in the deployment.

	Use this table to identify the job and index associated with a specific VM.

    For example:

    <pre class="terminal">
    $ bosh vms
    Deployment 'wordpress'
    +-------------+---------+---------------+-------------------------------+
    | Job/index   | State   | Resource Pool | IPs                           |
    +-------------+---------+---------------+-------------------------------+
    | mysql/0     | running | common        | 10.190.215.248, 23.23.249.123 |
    | nginx/0     | running | common        | 10.190.47.40, 23.23.247.237   |
    | wordpress/0 | running | common        | 10.111.27.137, 23.23.249.121  |
    +-------------+---------+---------------+-------------------------------+
    </pre>

1. Run `bosh logs <job_name> <index> --agent`.

    If you receive notification that a job will not start, use `tail` to review
	the log for that Agent for possible causes:

    <pre class="terminal">
    $ sudo tail -f -n 200 /var/vcap/bosh/log/current
    </pre>

###<a id="director-logs"></a>BOSH Director Logs ###

When you run a BOSH command using the [BOSH Command Line Interface (CLI)](./bosh-cli.html), the Director stores all activities for the specific
command in a task log.
Review these logs when you experience an issue with a BOSH command. The Director
stores logs in `/var/vcap/sys/log/director`.

To access the Director logs:

1. Run `bosh tasks` recent to find the task number of the failed command.
1. Run `bosh task <task_number>`.

    Example:

    <pre class="terminal">
    $ bosh tasks recent 5
+----+-------+-------------------------+-----------------------------------------------+--------------------------------------+
| #  | State | Timestamp               | Description                                   | Result                               |
+----+-------+-------------------------+-----------------------------------------------+--------------------------------------+
| 47 | done  | 2012-04-20 19:23:59 UTC | ssh: cleanup:{"job"=>"mysql", "indexes"=>[0]} | #File:0x00000002eb1cc8               |
| 46 | done  | 2012-04-20 19:23:09 UTC | ssh: setup:{"job"=>"mysql", "indexes"=>[0]}   | #File:0x00000004326618               |
| 45 | done  | 2012-04-20 19:15:34 UTC | fetch logs                                    | 22cb3f46-b818-4c44-8f71-c1afdxxxxxxx |
| 44 | done  | 2012-04-20 19:12:57 UTC | retrieve vm-stats                             |                                      |
| 43 | done  | 2012-04-20 19:09:37 UTC | fetch logs                                    | fc339e17-544a-419f-9b69-927479xxxxxx |
+----+-------+-------------------------+-----------------------------------------------+--------------------------------------+
</pre>

###<a id="monit-logs"></a>BOSH Monit Logs ###

The BOSH agent uses monit to start, restart, and stop services included in each
[job template](./terminology.html).

Monit detects errors and outputs useful information to its log. Use `tail` to
examine the monit.log:

<pre class="terminal">
$ sudo tail -f -n 200 /var/vcap/monit/monit.log
</pre>

<p class="note"><strong>Note</strong>: When creating a BOSH release, include a monit wrapper around the start and stop scripts of a job to aid future debugging.</p>

###<a id="jobs-logs"></a>Job Logs ###

Active jobs on running VMs produce logs.
The BOSH deployment configuration determines the output location of a specific
log.
The creator of a release defines this location  in a config file stored in
`release/jobs/<job_name>/templates/<config_file>`.

If you use Cloud Foundry for deployment, it configures jobs to log to
`/var/vcap/sys/log/<job_name>/<job_name>.log`.

To review a job log, run `bosh logs <job_name> <index>`.

###<a id="services-logs"></a>Services Logs ###

Services that run within a job, such as PostgreSQL, can output logs into their
own default locations.
These default logging locations depend on the specific database services.

##<a id="errand-logs"></a>Errand Logging ##

BOSH names logs using the errand name and log type, and writes the logs to the
`/var/vcap/sys/log/<errand-name>` directory.
For example, BOSH writes the stdout log for an errand named "smoke-test" to
`/var/vcap/sys/log/smoke-test/smoke-test.stdout.log`.

<p class="note"><strong>Note</strong>: Since BOSH releases the VM back into the resource pool when an errand completes, you cannot access any logs or screen output after this process finishes.</p>

By default, BOSH streams errand output smaller than 1MB, stdout, and stderr to
the screen.
You must redirect errand output greater than 1MB to a file.

To save output from a BOSH errand VM:

1. In the BOSH errand script, redirect the output to a log.
1. Using the BOSH CLI, run `bosh errand` with the `--download-logs` option to
download the logs.

By default, BOSH downloads the logs to your present working directory. Use the
`--logs-dir destination_directory` option to change this directory.

<pre class="terminal">
$ run errand SampleErrand --download-logs --logs-dir ~/workspace/SampleLogDirectory
</pre>

##<a id="log-rotation"></a>Log Rotation ##

BOSH manages log rotation with the [Logrotate](http://linuxconfig.org/logrotate)
log file management utility. BOSH instructs Logrotate to act on all .log files in the `/var/vcap/sys/log/`, `/var/vcap/sys/log/*/`, and `/var/vcap/sys/log/*/*/` directories.

Logrotate runs automatically with the following non-configurable settings:

* `missingok`: Skip missing log files and do not generate an error message
* `rotate 7`: Keep seven log files at a time
* `compress`: Compress old log files with gzip
* `delaycompress`: Postpone compression of log files until the next rotation
	cycle
* `copytruncate`: Copy log files, then truncate in place instead of creating new
	files
* `size 50M`: Rotate log files when they exceed 50 MB in size