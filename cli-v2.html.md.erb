---
title: CLI v2 vs v1
---

<p class="note">Note: Applies to CLI v2 v2.0.1+.</p>

---
## <a id="install"></a> Install

1. Download the binary for your platform and place it on your `PATH`. For example on UNIX machines:

  - [bosh-cli-2.0.13-darwin-amd64](https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.13-darwin-amd64) <span class="sha1">sha1: 0098ee608f89ed3588452d58ee5fa576530dd065</span>
  - [bosh-cli-2.0.13-linux-amd64](https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.13-linux-amd64) <span class="sha1">sha1: c14ffe1074990427f51d1b06f2f8e5b6b0388bb0</span>

  <pre class="terminal">
  $ chmod +x ~/Downloads/bosh-cli-*
  $ sudo mv ~/Downloads/bosh-cli-* /usr/local/bin/bosh
</pre>

1. Check `bosh` version to make sure it is properly installed:

  <pre class="terminal">
  $ bosh -v
</pre>

---
## <a id="cmds"></a> Commands

### <a id="env-mgmt"></a> Environment

See [Environments](cli-envs.html).

- <a id="envs"></a> `bosh environments` (Alias: `envs`)

    Lists aliased environments known to the CLI. Aliasing is done via `alias-env` command.

    <pre class="terminal">
    $ bosh envs
    URL              Alias
    104.154.171.255  gcp
    192.168.56.6     vbox

    2 environments

    Succeeded
    </pre>

- <a id="create-env"></a> `bosh create-env manifest.yml [--state path] [-v ...] [-o ...] [--vars-store path]`

    Creates single VM based on the manifest. Typically used to create a Director environment. Operation files and variables can be provided to adjust and fill in manifest before doing a deploy.

    `create-env` command replaces `bosh-init deploy` CLI command.

    <pre class="terminal">
    $ bosh create-env ~/workspace/bosh-deployment/bosh.yml \
      --state state.json \
      --vars-store ./creds.yml
      -o ~/workspace/bosh-deployment/virtualbox/cpi.yml \
      -o ~/workspace/bosh-deployment/virtualbox/outbound-network.yml \
      -o ~/workspace/bosh-deployment/bosh-lite.yml \
      -o ~/workspace/bosh-deployment/jumpbox-user.yml \
      -v director_name=vbox \
      -v internal_ip=192.168.56.6 \
      -v internal_gw=192.168.56.1 \
      -v internal_cidr=192.168.56.0/24 \
      -v network_name=vboxnet0 \
      -v outbound_network_name=NatNetwork
    </pre>

- <a id="alias-env"></a> `bosh alias-env name -e location [--ca-cert=location]`

    Assigns a name to the created environment for easier access in subsequent CLI commands. Instead of specifying Director location and possibly a CA certificate, subsequent commands can just take given name via `--environment` flag (`-e`).

    <pre class="terminal">
    $ bosh alias-env gcp -e 104.154.171.255 --ca-cert <(bosh int creds.yml --path /director_ssl/ca)
    </pre>

- <a id="env"></a> `bosh -e location environment` (Alias: `env`)

    Shows Director information in the deployment environment.

    <pre class="terminal">
    $ bosh -e vbox env
    Using environment '192.168.56.6' as '?'

    Name      vbox
    UUID      eeb27cc6-467e-4c1d-a8f9-f1a8de759f52
    Version   260.5.0 (00000000)
    CPI       warden_cpi
    Features  compiled_package_cache: disabled
              dns: disabled
              snapshots: disabled
    User      admin

    Succeeded
    </pre>

- <a id="delete-env"></a> `bosh delete-env manifest.yml [--state path] [-v ...] [-o ...] [--vars-store path]`

    Deletes previously created VM based on the manifest. Same flags provided to `create-env` command should be given to the `delete-env` command.

    `delete-env` command replaces `bosh-init delete` CLI command.

    <pre class="terminal">
    $ bosh delete-env ~/workspace/bosh-deployment/bosh.yml \
      --state state.json \
      --vars-store ./creds.yml
      -o ~/workspace/bosh-deployment/virtualbox/cpi.yml \
      -o ~/workspace/bosh-deployment/virtualbox/outbound-network.yml \
      -o ~/workspace/bosh-deployment/bosh-lite.yml \
      -o ~/workspace/bosh-deployment/jumpbox-user.yml \
      -v director_name=vbox \
      -v internal_ip=192.168.56.6 \
      -v internal_gw=192.168.56.1 \
      -v internal_cidr=192.168.56.0/24 \
      -v network_name=vboxnet0 \
      -v outbound_network_name=NatNetwork
    </pre>

---
### <a id="session-mgmt"></a> Session

- <a id="log-in"></a> `bosh log-in` (Alias: `l`, `login`)

    Logs in given user into the Director.

    This command can only be used interactively. If non-interactive use is necessary (for example in scripts) please set `BOSH_CLIENT` and `BOSH_CLIENT_SECRET` environment variables instead of using this command. Note that if the Director is configured with UAA authentication you cannot use UAA users with BOSH_* environment variables but rather have to use UAA clients.

    <pre class="terminal">
    $ bosh -e my-env l
    User (): admin
    Password ():
    </pre>

- <a id="log-out"></a> `bosh log-out` (Alias: `logout`)

    Logs out currently logged in user.

---
### <a id="stemcell-mgmt"></a> Stemcell

See [Uploading Stemcells](uploading-stemcells.html).

- <a id="stemcells"></a> `bosh -e my-env stemcells` (Alias: `ss`)

    Lists stemcells previously uploaded into the Director. Shows their names, versions and CIDs.

    <pre class="terminal">
    $ bosh -e my-env stemcells
    Using environment '192.168.56.6' as '?'

    Name                                         Version  OS             CPI  CID
    bosh-warden-boshlite-ubuntu-trusty-go_agent  3363*    ubuntu-trusty  -    6cbb176a-6a43-42...
    ~                                            3312     ubuntu-trusty  -    43r3496a-4rt3-52...
    bosh-warden-boshlite-centos-7-go_agent       3363*    centos-7       -    38yr83gg-349r-94...

    (*) Currently deployed

    1 stemcells

    Succeeded
    </pre>

- <a id="upload-stemcell"></a> `bosh -e my-env upload-stemcell location [--sha1=digest] [--fix]` (Alias: `us`)

    Uploads stemcell to the Director. Succeedes even if stemcell is already imported.

    Stemcell location may be local file system path or an HTTP/HTTPS URL.

    `--fix` flag allows to replace previously uploaded stemcell with the same name and version to repair stemcells that might have been corrupted in the cloud.

    <pre class="terminal">
    $ bosh -e my-env upload-stemcell ~/Downloads/bosh-stemcell-3363-warden-boshlite-ubuntu-trusty-go_agent.tgz
    $ bosh -e my-env upload-stemcell https://bosh.io/d/stemcells/bosh-stemcell-warden-boshlite-ubuntu-trusty-go_agent?v=3363
    </pre>

- <a id="delete-stemcell"></a> `bosh -e my-env delete-stemcell name/version`

    Deletes uploaded stemcell from the Director. Succeedes even if stemcell is not found.

    <pre class="terminal">
    $ bosh -e my-env delete-stemcell [bosh-warden-boshlite-ubuntu-trusty-go_agent/3363]
    </pre>

---
### <a id="release-creation"></a> Release creation

  create-release         Create release (aliases: cr)
  finalize-release       Create final release from dev release tarball (aliases: finr)
  init-release           Initialize release
  reset-release          Reset release
  generate-job           Generate job
  generate-package       Generate package

---
### <a id="blob-mgmt"></a> Release blob

See [Release Blobs](release-blobs.html) for a detailed workflow.

- <a id="blobs"></a> `bosh blobs`

    Lists tracked blobs from `config/blobs.yml`. Shows uploaded and not-yet-uploaded blobs.

    <pre class="terminal">
    $ cd release-dir
    $ bosh blobs
    Path                               Size     Blobstore ID         Digest
    golang/go1.6.2.linux-amd64.tar.gz  81 MiB   f1833f76-ad8b-4b...  b8318b0...
    stress/stress-1.0.4.tar.gz         187 KiB  (local)              e1533bc...

    2 blobs

    Succeeded
    </pre>

- <a id="add-blob"></a> `bosh add-blob src-path dst-path`

    Sarts tracking blob in `config/blobs.yml` for inclusion in packages.

    <pre class="terminal">
    $ cd release-dir
    $ bosh add-blob ~/Downloads/stress-1.0.4.tar.gz stress/stress-1.0.4.tar.gz
    </pre>

- <a id="remove-blob"></a> `bosh remove-blob blob-path`

    Stops tracking blob in `config/blobs.yml`. Does not remove previously uploaded copies from the blobstore as older release versions may still want to reference it.

    <pre class="terminal">
    $ cd release-dir
    $ bosh remove-blob stress/stress-1.0.4.tar.gz
    </pre>

- <a id="upload-blob"></a> `bosh upload-blobs`

    Uploads previously added blobs that were not yet uploaded to the blobstore. Updates `config/blobs.yml` with returned blobstore IDs. Before creating a final release it's strongly recommended to upload blobs so that other release contributors can rebuild a release from scratch.

    <pre class="terminal">
    $ cd release-dir
    $ bosh upload-blobs
    </pre>

- <a id="sync-blob"></a> `bosh sync-blobs`

    Downloads blobs into `blobs/` based on `config/blobs.yml`.

    <pre class="terminal">
    $ cd release-dir
    $ bosh sync-blobs
    </pre>

---
### <a id="release-mgmt"></a> Release

  releases               List releases (aliases: rs, rels)
  upload-release         Upload release (aliases: ur)
  delete-release         Delete release (aliases: delr)
  export-release         Export the compiled release to a tarball (aliases: expr)
  inspect-release        List all jobs, packages, and compiled packages associated with a release (

---
### <a id="cloud-config-mgmt"></a> Cloud config

  cloud-config           Show current cloud config (aliases: cc)
  update-cloud-config    Update current cloud config (aliases: ucc)

---
### <a id="runtime-config-mgmt"></a> Runtime config

runtime-config         Show current runtime config (aliases: rc)
update-runtime-config  Update current runtime config (aliases: urc)

---
### <a id="cpi-config-mgmt"></a> CPI config

cpi-config         Show current cpi config
update-cpi-config  Update current cpi config

---
### <a id="deployment-mgmt"></a> Deployment

  deployments            List deployments (aliases: ds, deps)
  deployment             Show deployment information (aliases: dep)
  deploy                 Deploy according to the currently selected deployment manifest (aliases: d)
  delete-deployment      Delete deployment (aliases: deld)
  manifest               Download deployment manifest locally (aliases: m, man, download-manifest)
  recreate               Recreate instance(s)
  restart                Restart instance(s)
  logs                   Fetch logs from instance(s)
  scp                    SCP to/from instance(s)
  ssh                    SSH into instance(s)
  start                  Start instance(s)
  stop                   Stop instance(s)
  unignore               Unignore an instance
  ignore                 Ignore an instancealiases: insr)
  instances              List all instances in a deployment (aliases: is, ins)
  vms                    List all VMs in all deployments
  events                 List events
  variables              List variables (aliases: vars)

---
### <a id="errand-mgmt"></a> Errand

  run-errand             Run errand (aliases: re)
  errands                List errands (aliases: es, errs)

---
### <a id="task-mgmt"></a> Task

  task                   Show task status and start tracking its output (aliases: t)
  tasks                  List running or recent tasks (aliases: ts)
  cancel-task            Cancel task at its next checkpoint (aliases: ct)

---
### <a id="snapshot-mgmt"></a> Snapshot

  delete-snapshot        Delete snapshot (aliases: delsnap)
  delete-snapshots       Delete all snapshots in a deployment (aliases: delsnaps)
  snapshots              List snapshots (aliases: snaps)
  take-snapshot          Take snapshot (aliases: tsnap)

---
### <a id="deployment-recovery"></a> Deployment recovery

  delete-disk            Delete disk
  delete-vm              Delete VM
  attach-disk            Attaches an disk to an instance and replaces the current disk
  clean-up               Clean up releases, stemcells, disks, etc.
  cloud-check            Cloud consistency check and interactive repair (aliases: cck, cloudcheck)
  update-resurrection    Enable/disable resurrection
  locks                  List current locks
  disks                  List disks

---
### <a id="misc"></a> Misc

- `bosh help`

    Shows list of available commands and global options. Consider using `-h` flag for individual commands.

- <a id="interpolate"></a> `bosh interpolate manifest.yml [-v ...] [-o ...] [--vars-store path] [--path op-path]` (Alias: `int`)

    Interpolates variables into a manifest. Operation files and variables can be provided to adjust and fill in manifest before doing a deploy.

    <pre class="terminal">
    $ bosh int bosh-deployment/bosh.yml \
      --vars-store ./creds.yml
      -o bosh-deployment/virtualbox/cpi.yml \
      -o bosh-deployment/virtualbox/outbound-network.yml \
      -o bosh-deployment/bosh-lite.yml \
      -o bosh-deployment/jumpbox-user.yml \
      -v director_name=vbox \
      -v internal_ip=192.168.56.6 \
      -v internal_gw=192.168.56.1 \
      -v internal_cidr=192.168.56.0/24 \
      -v network_name=vboxnet0 \
      -v outbound_network_name=NatNetwork

    $ bosh int creds.yml --path /admin_password
    skh32i7rdfji4387hg

    $ bosh int creds.yml --path /director_ssl/ca
    -----BEGIN CERTIFICATE-----
    ...
    </pre>

