---
title: Creating a MicroBOSH Deployment Manifest
---

The deployment manifest for MicroBOSH is similar the deployment manifest for multi-VM BOSH,
but much smaller.

Parts of the manifest are IaaS-specific.
Refer to the example for the IaaS you plan to use:

* [AWS](./micro-manifest-examples/aws-example.html)
* [OpenStack](./micro-manifest-examples/openstack-example.html)
* [vSphere](./micro-manifest-examples/vsphere-example.html)

## <a id="anatomy"></a> Anatomy of a Manifest ##

You begin the BOSH deployment manifest with three dashes, followed by the name you give the deployment.

For example:

<pre class="terminal">
---
name: dummy
</pre>

After that, there are five required _blocks_:

1. `logging`
1. `network`
1. `resources`
1. `cloud`
1. `apply_spec`

The manifest is in YAML, so the YAML parser translates each block into a hash.
For this reason, you can put the blocks in any order.

### <a id='logging'></a> The logging block ###

_use debug_


### <a id='network'></a> The network block ###

The `networks` block is where you specify network configuration information for the deployment.
You can specify multiple networks.

For example:

<pre class="terminal">
networks:
- name: default
  type: manual
  subnets:
  - range: 10.10.0.0/24
    gateway: 10.10.0.1
    static:
    - 10.10.0.7 - 10.10.0.9
    reserved:
    - 10.10.0.2 - 10.10.0.6
    - 10.10.0.10 - 10.10.0.10
    dns:
    - 10.10.0.6
    cloud_properties:
      subnet: subnet-d597b993
</pre>

This block is IaaS-dependent, because subnets, network names, and other keys may differ from IaaS to IaaS.

### <a id='resources'></a> The resources block ###

The resources block lists

<pre class="terminal">
resources:

</pre>

### <a id='cloud'></a> The cloud block ###


### <a id='apply'></a> The apply_spec block ###

The `properties` block consists of headings followed by one or more lines of configuration information.
Most headings are names of features (templates) from the `jobs` block.

This block can be quite long, so the example below shows only a few interesting excerpts.

**Note**: The `mysql` and `registry` attributes provide an example of a _YAML reference_, where:

* A string prefixed with an ampersand defines the attribute to its left as a hash.
* Strings prefixed by an asterisk reference the hash defined previously.

In this case, `&bosh_db` defines the all the keys and values in the `mysql` attribute as `bosh_db`.
Later, the `db` key in the `registry` attribute references the `bosh_db` hash.
The result is that the value of the `db` key in `registry` is the entire set of keys and values in `mysql`.

<pre class="terminal">
properties:

  ntp:
  - 0.north-america.pool.ntp.org
  - 1.north-america.pool.ntp.org
  - 2.north-america.pool.ntp.org
  - 3.north-america.pool.ntp.org

  blobstore:
    address: 10.10.0.7
    port: 25251
    backend_port: 25552
    agent:
      user: agent
      password: 665aap2cfca30465ca81845ef4cf87560
    director:
      user: director
      password: 845ef4cf87560665aap2cfca30465ca81

...

  mysql: &bosh_db
    adapter: mysql2
    user: u1250a5fcd8ade2
    password: p2cfca30665aa46f875605ca81845ef4c
    host: bosh.cabaz18bo7yr.us-east-1.rds.amazonaws.com
    port: 3306
    database: bosh

...

  registry:
    address: 10.10.0.7
    db: *bosh_db
    http:
      port: 25777
      user: awsreg
      password: 72a181ef4cf87560665zzzp2cfca30465c

</pre>



## <a id="creating"></a> How to Create a Manifest ##

You can modify example manifests to suit your purposes. 
Another approach is to use a tool like [spiff](https://github.com/cloudfoundry-incubator/spiff) to create a manifest.

