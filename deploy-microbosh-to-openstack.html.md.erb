---
title: Deploying MicroBOSH to OpenStack
---

This topic explains how to deploy MicroBOSH to OpenStack.

## <a id="prerequisites"></a>Prerequisites ##

1. The [BOSH Command Line Interface (CLI)](./bosh-cli.html) installed on your
local computer.

1. An OpenStack environment running one of the following supported releases:
    * [Folsom](http://www.openstack.org/software/folsom/)
    * [Grizzly](http://www.openstack.org/software/grizzly)
    * [Havana](http://www.openstack.org/software/havana)
    <br /><br />
1. The following OpenStack services:
    * [Identity](http://www.openstack.org/software/openstack-shared-services/):
      MicroBOSH authenticates credentials and retrieves the endpoint URLs for
      other OpenStack services through the Identity service.
    * [Compute](http://www.openstack.org/software/openstack-compute/): MicroBOSH
      boots new VMs, assigns floating IPs to VMs, and creates and attaches
      volumes to VMs through the Compute service.
    * [Image](http://www.openstack.org/software/openstack-shared-services/):
      MicroBOSH updates stemcells using the Image service.
    * **(Optional)** [OpenStack Networking](http://www.openstack.org/software/openstack-networking/): Provides
      network scaling and automated management functions that are useful when
      deploying complex distributed systems.
    <br /><br />
1. The following OpenStack networks:
    * An external network with a subnet.
    * An internal network with a subnet. The subnet must have an IP address
      allocation pool. Record the subnet IP address range and the internal
      network UUID for use in [Step 2: Create the Deployment Manifest](#create-manifest).
    <br /><br />
1. A new OpenStack project.

## <a id="prepare"></a>Step 1: Prepare OpenStack Project for MicroBOSH ##

To prepare your OpenStack project for deploying MicroBOSH, use the OpenStack GUI
to perform the following tasks:

* Create a [Keypair](#keypair).
* Create and configure [Security Groups](#security-groups).
* Allocate a [floating IP address](#floating-ip).

### <a id="keypair"></a>Create a Keypair ###

1. Select **Access & Security** from the left navigation panel.

1. Select the **Keypairs** tab.

    <%= image_tag("images/micro-openstack/keypair.png") %>

1. Click **Create Keypair**.

1. Name the Keypair “microbosh” and click **Create Keypair**.

    <%= image_tag("images/micro-openstack/create-keypair.png") %>

1. Save the `microbosh.pem` file to your local `~/.ssh` directory.

    <%= image_tag("images/micro-openstack/save-keypair.png") %>

### <a id="security-groups"></a>Create and Configure Security Groups ###

You must create and configure two Security Groups to restrict incoming network traffic to the BOSH VMs.

####BOSH Security Group ####

1. Select **Access & Security** from the left navigation panel.

1. Select the **Security Groups** tab.

    <%= image_tag("images/micro-openstack/security-groups.png") %>

1. Click **Create Security Group**.

1. Name the security group “bosh” and add the description “BOSH Security Group.”

    <%= image_tag("images/micro-openstack/create-bosh-sg.png") %>

1. Click **Create Security Group**.

1. Select the BOSH Security Group and click **Edit Rules**.

1. Click **Add Rule**.

    <%= image_tag("images/micro-openstack/edit-bosh-sg.png") %>

1. Add the following rules to the BOSH Security Group:

    <table border="1" class="nice" >
      <tr>
        <th><b>Direction</b></th>
        <th></b>Ether Type</b></th>
        <th><b>IP Protocol</b></th>
        <th></b>Port Range</b></th>
        <th><b>Remote</b></th>
      </tr>
      <tr>
        <td>Ingress</td><td>IPv4</td><td>TCP</td><td>1-65535</td><td>bosh</td>
     </tr>
     <tr>
       <td>Ingress</td><td>IPv4</td><td>TCP</td><td>25777</td><td>0.0.0.0/0 (CIDR)</td>
     </tr>
     <tr>
       <td>Ingress</td><td>IPv4</td><td>TCP</td><td>25555</td><td>0.0.0.0/0 (CIDR)</td>
     </tr>
     <tr>
       <td>Ingress</td><td>IPv4</td><td>TCP</td><td>25250</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>TCP</td><td>6868</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>TCP</td><td>4222</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>UDP</td><td>68</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>TCP</td><td>53</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>UDP</td><td>53</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Egress</td><td>IPv4</td><td>Any</td><td>-</td><td>0.0.0.0/0 (CIDR)</td>
     </tr>
     <tr>
       <td>Egress</td><td>IPv6</td><td>Any</td><td>-</td><td>::/0 (CIDR)</td>
      </tr>
    </table>

####SSH Security Group ####

1. Select **Access & Security** from the left navigation panel.

1. Select the **Security Groups** tab.

    <%= image_tag("images/micro-openstack/security-groups-2.png") %>

1. Click **Create Security Group**.

1. Name the security group “ssh” and add the description “SSH and DHCP Security Group.”

    <%= image_tag("images/micro-openstack/create-ssh-sg.png") %>

1. Click **Create Security Group**.

1. Select the SSH Security Group and click **Edit Rules**.

1. Click **Add Rule**.

1. Add the following rules to the SSH Security Group:

<table border="1" class="nice" >
  <tr>
    <th><b>Direction</b></th>
    <th></b>Ether Type</b></th>
    <th><b>IP Protocol</b></th>
    <th></b>Port Range</b></th>
    <th><b>Remote</b></th>
  </tr>
  <tr>
    <td>Ingress</td><td>IPv4</td><td>UDP</td><td>68</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
    <td>Ingress</td><td>IPv4</td><td>TCP</td><td>22</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Ingress</td><td>IPv4</td><td>ICMP</td><td>-</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Egress</td><td>IPv4</td><td>Any</td><td>-</td><td>0.0.0.0/0 (CIDR)</td>
    </tr>
    <tr>
      <td>Egress</td><td>IPv6</td><td>Any</td><td>-</td><td>::/0 (CIDR)</td>
  </tr>
</table>

###<a id="floating-ip"></a>Allocate a floating IP address ###

1. Select **Access & Security** from the left navigation panel.

1. Select the **Floating IPs** tab.

    <%= image_tag("images/micro-openstack/create-floating-ip.png") %>

1. Click **Allocate IP to Project**.

1. Select **External** from the **Pool** dropdown menu.

1. Click **Allocate IP**.

    <%= image_tag("images/micro-openstack/allocate-ip.png") %>

1. Record the Floating IP Address for use in [Step 2: Create the Deployment Manifest](#create-manifest).

    <%= image_tag("images/micro-openstack/floating-ip.png") %>


##<a id="create-manifest"></a>Step 2: Create the Deployment Manifest ##

The MicroBOSH deployment manifest is a YAML file that defines the components and
properties of the deployment.
Create a manifest for your deployment as follows:

1. Create a local `deployments` directory to store your manifest.

    <pre class="terminal">
    $ mkdir ~/workspace/deployments
    </pre>

1. Download the MicroBOSH deployment manifest [template](./openstack-microbosh.yml) to your `deployments` directory.
If necessary, rename the template file to `openstack-microbosh.yml`.

1. Open the `openstack-microbosh.yml` file in a text editor.
Replace the following properties in the template with the relevant OpenStack
information:
    * NETWORK-UUID
    * SUBNET-POOL-IP-ADDRESS
    * FLOATING-IP
    * OPENSTACK-PASSWORD
    * IDENTITY-API-ENDPOINT
    * OPENSTACK-TENANT
    * OPENSTACK-USERNAME

    <br/ >
	<p class="note">**Note**: See the [OpenStack documentation](http://docs.openstack.org/) for help finding this information.</p>

The MicroBOSH deployment manifest template:

<pre class="terminal">
	name: openstack-microbosh
	logging:
	  level: DEBUG

	network:
	  cloud_properties:
	    net_id: NETWORK-UUID # Replace with your OpenStack internal network UUID
	  ip: SUBNET-POOL-IP-ADDRESS # Replace with an address from the subnet IP address allocation pool of your OpenStack internal network
	  type: manual
	  vip: FLOATING-IP # Replace with a floating IP address

	resources:
	  cloud_properties:
	    instance_type: m1.xlarge
	  persistent_disk: 16384

	cloud:
	  plugin: openstack
	  properties:
	    openstack:
	      api_key: OPENSTACK-PASSWORD # Replace with your OpenStack password
	      auth_url: IDENTITY-API-ENDPOINT # Replace with your OpenStack Identity API endpoint
	      default_key_name: microbosh # OpenStack Keypair name
	      default_security_groups:
	      - bosh
	      - ssh
	      private_key: ~/ssh2/id_rsa # Path to OpenStack Keypair private key
	      tenant: OPENSTACK-TENANT # Replace with OpenStack tenant name
	      username: OPENSTACK-USERNAME # Replace with OpenStack username

	apply_spec:
	  properties:
	    director:
	      max_threads: 3
	    hm:
	      resurrector_enabled: true
	    ntp: # This example uses the North American NTP servers. Edit for your region.
	    - 0.north-america.pool.ntp.org
	    - 1.north-america.pool.ntp.org
</pre>

##<a id="download-stemcell"></a>Step 3: Download a MicroBOSH stemcell ##

1. In a terminal window, run `bosh public stemcells` from your `deployments`
directory to view a list of publicly available stemcells.

	<pre class="terminal">
	$ bosh public stemcells
	+----------------------------------------------------------------+
	| Name                                                           |
	+----------------------------------------------------------------+
	| bosh-stemcell-2427-openstack-kvm-ubuntu.tgz			         |
	| bosh-stemcell-2624-openstack-kvm-centos.tgz			         |
	| bosh-stemcell-2624-openstack-kvm-ubuntu-lucid.tgz              |
	| bosh-stemcell-2652-openstack-kvm-centos-go\_agent.tgz           |
	| bosh-stemcell-2605-openstack-kvm-ubuntu-trusty-go\_agent.tgz    |
	| bosh-stemcell-2652-openstack-kvm-ubuntu-lucid-go\_agent.tgz     |
	| bosh-stemcell-53-warden-boshlite-ubuntu.tgz			         |
	| bosh-stemcell-3-warden-boshlite-ubuntu-trusty-go\_agent.tgz	  |
	| bosh-stemcell-60-warden-boshlite-ubuntu-lucid-go\_agent.tgz	  |
	+----------------------------------------------------------------+

1. Run `bosh download public stemcell STEMCELL-NAME` to download an OpenStack
stemcell.
BOSH stemcell names include the type, BOSH build number, target IaaS and
hypervisor, and underlying operating system.

	<pre class="terminal">
	$ bosh download public stemcell bosh-stemcell-2624-openstack-kvm-centos.tgz
	</pre>

##<a id="deploy-microbosh"></a>Step 4: Deploy MicroBOSH ##

1. In a terminal window, run `bosh micro deployment microbosh.yml` from your
`deployments` directory to instruct MicroBOSH to use your manifest file.

	<pre class="terminal">
	$ bosh micro deployment openstack-microbosh.yml
	WARNING! Your target has been changed to https://173.81.16.12:25555!
	Deployment set to ~workspace/deployment/openstack-microbosh.yml
	</pre>

	<p class="note"><strong>Note</strong>: The <code>WARNING!</code> message alerts you to a change in the targeted IP address. It is not an error message.</p>

1. Use `bosh micro deploy STEMCELL-NAME` to deploy MicroBOSH using the
downloaded stemcell.

	<p class="note"><strong>Note</strong>: A red <code>No bosh-deployments.yml file found</code> warning appears. Type "yes" at the prompt to allow MicroBOSH to save state in the current directory.</p>

	<pre class="terminal">
	$ bosh micro deploy bosh-stemcell-2624-openstack-kvm-centos.tgz

	No `bosh-deployments.yml` file found in current directory.

	Conventionally, 'bosh-deployments.yml' should be saved in ~/workspace.
	Is ~/workspace/deployments a directory where you can save state? (type 'yes' to continue): yes

	Deploying new micro BOSH instance ~/workspace/deployments/openstack-microbosh.yml to 'https://54.86.66.111:25555' (type 'yes' to continue): yes
	  Started deploy micro bosh
	  ...
	  Done deploy micro bosh
	Deployed '~/workspace/deployments/openstack-microbosh.yml' to 'https://54.86.66.111:25555', took 00:04:51 to complete
	</pre>

1. Use `bosh target FLOATING-IP-ADDRESS` to log into your new MicroBOSH server. The default username and password are `admin` and `admin`.

<pre class="terminal">
	$ bosh target 54.86.66.111
	Target set to 'openstack-microbosh'
	Your username: admin
	Enter password: *****
	Logged in as 'admin'
</pre>

##<a id="troubleshooting"></a>Troubleshooting ##
* If the deployment fails, run `bosh micro delete` and redeploy.
* If an API Key error message appears, check the accuracy of the OPENSTACK-PASSWORD in the deployment manifest.
* If other error messages appear:
    * Check your deployment manifest for typographical or formatting errors.
    * Review your OpenStack configuration.