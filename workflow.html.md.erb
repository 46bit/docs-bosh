---
title: Basic BOSH Workflow
---

While the distributed software you use BOSH to deploy can be complex, the basic patterns for working with BOSH are not.

## <a id="options"></a> Options for Deploying BOSH  ##

Before you use BOSH to deploy software, how do you deploy BOSH itself?

The two options below are supported.
Experimental and community-based methods also exist.

### <a id="lite"></a> BOSH Lite  ###

[BOSH Lite] (https://github.com/cloudfoundry/bosh-lite) is software that runs within a single VM created with [Vagrant] (http://www.vagrantup.com/).
Scripts packaged with BOSH Lite make it simple to deploy on a laptop or other local environment.
In sum, BOSH Lite is a low-cost, low-risk development environment to test and experiment with BOSH.
To deploy BOSH Lite, you do not need a release, a stemcell, or a manifest, only Vagrant and related files.

### <a id="micro"></a> MicroBOSH  ###

MicroBOSH is software that runs within a single VM on the cloud infrastructure that are supported for deploying software with BOSH.
To deploy MicroBOSH you need a stemcell and a manifest, but no release.
MicroBOSH is suited to deploying software (as an alternative to multi-VM BOSH), and is only supported way to deploy BOSH for production.

## <a id="before"></a> Before Deploying, Obtain the Stemcell, Release and Manifest  ##

Before you deploy, you must have:

* A **release** that has the software products and services you want.
You can obtain a release from a software provider, or create one yourself.

* A **stemcell** appropriate to the cloud infrastructure and OS where you plan to deploy.
You obtain a stemcell from Pivotal Network.

* A **manifest** that accounts for environmental constraints and specifies how you want to orchestrate your deployment.
You can modify an example manifest to suit your purposes, or use a tool like spiff to create a manifest.

## <a id="deploying"></a> Deploying Software with BOSH  ##

To deploy software with BOSH, you perform four steps:

1. Upload stemcell.
1. Upload release.
1. Set deployment with a manifest.
1. Deploy.

This pattern is at the heart of the BOSH workflow, and its power is in simplicity.
Without it, you would likely need to perform a larger number of tasks, many of them difficult to replicate from deployment to deployment.
Because deploying software is an iterative process, the amount of labor that this pattern saves is significant.

Other activities typical of the care and feeding of distributed software deployments include:

* Creating and editing users
* Inspecting the state of VMs
* Getting (viewing) and sometimes cancelling Director tasks

You perform these activities before or after deployment, or both.


